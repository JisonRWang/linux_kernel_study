1. 出现在 net_dev_init() 函数上面的注释中的“rtnl semaphore”是什么？
2. initcall_debug 怎么设置，在哪里设置？
3. subsys_initcall()的详细原理
4. fs_initcall()的详细原理
5. fs_initcall(ipv4_offload_init);卸载相关的东西
6. 搞清楚proxy_arp和arp_ignore/arp_announce相关的东西
7. 搞清楚虚拟机网络拓扑，虚拟机是不是可以收到宿主机的所有报文？
8. 作为主机时arp相关的原理和内核源码实现，是不是只有在跑ARP报文的时候才会建立ARP表项，收到其他协议的报文时并不会建立ARP表项？需要看ARP本身的原理和源码。
9. 如何将linux主机配置成二层交换机？有哪些内核开关需要打开？配置成二层交换机之后，内核协议栈是如何在二层记录arp表项的？整个内核流程是什么？
10. 如果将linux主机配置成路由器？有哪些内核开关需要打开？配置成功后，内核协议栈又是怎么走的？
11. 255.255.255.0这种广播地址在内核中是怎么使用的？
12. 系统中的各种TTY
13. 内核如何被配置为支持VLAN的路由器？具体代码又是怎么实现的？
14. 同一个VLAN中，在没有配置默认路由的情况下，为什么广播包可以抵达另一个子网但是实际的IP包却不能？客户端在发送这种包的时候协议栈都做了什么？协议栈发现是跨网段且没有路由的情况下，会怎么处理这样的包？为什么实验现象是ARP广播中的requestIP地址居然是255.255.255.0？
15. 同网段，不同VLAN是如何通信的？
16. 交换机开启了VLAN之后，是如何转发同一个网段但是不同VLAN的报文的？如果使用了arp代理，那就不怕同一个VLAN中的正常主机也被交换机代理了么？到底三层交换机是根据什么来决定是否进行ARP代理的呢？









